规则:23
	/*考虑使用其他程序库*/
	
	//iostream程序库与C中的stdio相比有几个优点（参见Effective C++）。
	//例如它是类型安全的（type-safe），它是可扩展的。然而在效率方面，
	//iostream程序库总是不如stdio，因为stdio产生的执行文件与iostream
	//产生的执行文件相比尺寸小而且执行速度快。
	
	
	//一种方法就是用这两个程序库来运行benchmark程序。不过你必须记住
	//benchmark也会撒谎。不仅很难拿出一组数据能够代表程序或程序库的
	//典型用法，而且就算拿出来也是没用，除非有可靠的方法判断出你或你
	//的客户就是典型的代表。不过benchmark还是能在同一个问题的不同解决
	//方法间的比较上提供一些信息，所以尽管完全依靠benchmark是愚蠢的，
	//但是忽略它们也是愚蠢的。
	
	
	//如果你的程序有I/O瓶颈，你可以考虑用stdio替代iostream，如果程序
	//在动态分配和释放内存上使用了大量时间，你可以想想是否有其他的
	//operator new 和 operator delete的实现可用（参见条款M8和Effective C++条款10）。
	//因为不同的程序库在效率、可扩展性、移植性、类型安全和其他一些领域上蕴含着不同
	//的设计理念，通过变换使用给予性能更多考虑的程序库，你有时可以大幅度地提高软件的效率。