ITEM24:为什么要使用多继承
	//1.什么是多继承(MI)?在C++中引入多继承带来了哪些额外的可能性和复杂性?
	
	//多继承代码示例
	class Derived : public Base1, private Base2
	{
	  //...
	};
	//在C++中引入多继承所带来的可能性是:一个类的同一个基类可能会不只一次的作为
	//它的基础类出现。这时我们必须引入虚拟继承。

  //设计准则:尽量避免多继承，但不是不用。
  
  	
	//2.多继承到底有必要吗？为什么
	//多继承在以下三个方面还是有必要的
	//(1) 结合使用程序模块或程序库
	//(2) interface类
	//(3) 易于(多态)使用
	
	//有时候单纯的从两个不同的基类继承并没有必要，相反，我们要让每一个继承都有不同的理由
	